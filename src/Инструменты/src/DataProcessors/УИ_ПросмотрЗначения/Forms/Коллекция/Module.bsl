
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Не Параметры.Свойство("КонтейнерЗначения") Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	//@skip-check unknown-form-parameter-access
	ВходящееЗначениеКонтейнер = Параметры.КонтейнерЗначения;//см. УИ_ОбщегоНазначенияКлиентСервер.НовыйХранилищеЗначенияУниверсальногоЗначения
	//@skip-check unknown-form-parameter-access
	КонтекстКлиента = Параметры.КонтекстКлиента;
	//@skip-check unknown-form-parameter-access
	Выражение = Параметры.Выражение;
	
	ЗначениеКонтейнера = УИ_ОбщегоНазначенияКлиентСервер.ЗначениеИзХранилищаКонтейнераУниверсальногоЗначения(ВходящееЗначениеКонтейнер);
	ПредставлениеТипа = Строка(ТипЗнч(ЗначениеКонтейнера));
	КоличествоЭлементов = ЗначениеКонтейнера.Количество();
	Заголовок = ВходящееЗначениеКонтейнер.ОписаниеТипа.Имя;
	
	ЗаполнитьКолонкиКоллекции(ЗначениеКонтейнера);
	ЗаполнитьТаблицуКоллекии(ЗначениеКонтейнера);
	
	ввв = Документы._ДемоСчетНаОплатуПокупателю.ПолучитьМакет("ПФ_MXL_СчетЗаказ");
КонецПроцедуры
#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

// Код процедур и функций

#КонецОбласти

#Область ОбработчикиКомандФормы
&НаКлиенте
Процедура ПоказатьВОтдельномОкне(Команда)
	ТекущиеДанные = Элементы.ТаблицаКоллекции.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВидыКонтейнеров = ВидыКонтейнераЗначения();
	
	ХранилищеДляПараметровФормы = УИ_ОбщегоНазначенияКлиентСервер.НовыйХранилищеЗначенияУниверсальногоЗначения();
	ХранилищеДляПараметровФормы.ОписаниеТипа = ТекущиеДанные.ЗначениеТипЗначения;
	ХранилищеДляПараметровФормы.ИмяОбъектаМетаданных = ТекущиеДанные.ИмяОбъектаМетаданных;
	
	Если ТекущиеДанные.ВидКонтейнера = ВидыКонтейнеров.ВычислитьПоВходящемуЗначению Тогда
		ХранилищеДляПараметровФормы.ИменаСвойствДляДоступаКЗначению.Добавить(ТекущиеДанные.Индекс);
//	ИначеЕсли ТекущиеДанные.ВидКонтейнера = ВидыКонтейнеров.ВычислитьВыражение Тогда
//	ИначеЕсли ТекущиеДанные.ВидКонтейнера = ВидыКонтейнеров.ХранилищеДанныхФормы Тогда
//
	Иначе
		ХранилищеДляПараметровФормы.Вид = ТекущиеДанные.ВидКонтейнера;
		Если ТекущиеДанные.ВидКонтейнера = ВидыКонтейнеров.Значение Тогда
			ХранилищеДляПараметровФормы.Хранилище = ТекущиеДанные.Значение;
		Иначе
			ХранилищеДляПараметровФормы.Хранилище = ТекущиеДанные.ЗначениеКонтейнер;					
		КонецЕсли;
	КонецЕсли;
	
	ОповещениеОЗавершении = Новый ОписаниеОповещения();
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КонтейнерЗначения", ХранилищеДляПараметровФормы);
	ПараметрыФормы.Вставить("КонтекстКлиента", КонтекстКлиента);
	ПараметрыФормы.Вставить("Выражение", Выражение+"["+ТекущиеДанные.Индекс+"]");
//	Если ТекущиеДанные.ЗначениеТипЗначения.ЭтоКоллекция Тогда
//		ОткрытьФорму("Обработка.УИ_ПросмотрЗначения.Форма.Коллекция",
//					 ПараметрыФормы,
//					 ЭтотОбъект,
//					 Новый УникальныйИдентификатор,
//					 ,
//					 ,
//					 ОповещениеОЗавершении,
//					 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
//	Иначе
		ОткрытьФорму("Обработка.УИ_ПросмотрЗначения.Форма.Форма",
					 ПараметрыФормы,
					 ЭтотОбъект,
					 Новый УникальныйИдентификатор,
					 ,
					 ,
					 ОповещениеОЗавершении,
					 РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
//	КонецЕсли;
КонецПроцедуры
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВидыКонтейнераЗначения() 
	Виды = УИ_ОбщегоНазначенияКлиентСервер.ВидыКонтейнераУниверсальногоЗначения();
	Виды.Вставить("ВычислитьПоВходящемуЗначению", "ВычислитьПоВходящемуЗначению");
	
	Возврат Виды;	
КонецФункции

&НаСервере
Процедура ЗаполнитьКолонкиКоллекции(ЗначениеКоллекции)
	Если ЗначениеКоллекции.Количество() =0 Тогда
		Возврат;
	КонецЕсли;
	ТипыЭлементов = Новый Соответствие;
	
	Для Каждого ТекЭл Из ЗначениеКоллекции Цикл
		ТипЭл = ТипЗнч(ТекЭл);
		Если ТипыЭлементов[ТипЭл] = Неопределено Тогда
			ТипыЭлементов.Вставить(ТипЭл, ТекЭл);
		КонецЕсли;
	КонецЦикла;	
	
	ОбщиеИменаСвойств = Неопределено;
	Для Каждого КлючЗначение Из ТипыЭлементов Цикл
		ОписаниеТипаПлатформы = УИ_ТипыПлатформыКлиентСервер.ОписаниеТипаПлатформыПоТипу(КлючЗначение.Ключ);
		Если ОписаниеТипаПлатформы = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		ОбъектМД = Метаданные.НайтиПоТипу(КлючЗначение.Ключ);
		ИменаСвойств = УИ_ОбщегоНазначения.ИменаСвойствОписанияТипаПлатформы(ОписаниеТипаПлатформы,
																			 КлючЗначение.Значение,
																			 ОбъектМД);

		Если ОбщиеИменаСвойств = Неопределено Тогда
			ОбщиеИменаСвойств = ИменаСвойств;
		Иначе
			ОбщиеИменаСвойств = УИ_ОбщегоНазначенияКлиентСервер.РазностьМассивов(ОбщиеИменаСвойств, ИменаСвойств);
		КонецЕсли;
	КонецЦикла;
	Если ОбщиеИменаСвойств <> Неопределено Тогда
		ИменаСвойствКоллекции.ЗагрузитьЗначения(ОбщиеИменаСвойств);
	КонецЕсли;

	МассивДобавляемыхРеквизитов = Новый Массив;
	Для Каждого ИмяСвойства Из ОбщиеИменаСвойств Цикл
		МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы("Свойство_" + ИмяСвойства, Новый ОписаниеТипов,
			"ТаблицаКоллекции", ИмяСвойства));
	КонецЦикла;
	ИзменитьРеквизиты(МассивДобавляемыхРеквизитов);

	Для Каждого ИмяСвойства Из ОбщиеИменаСвойств Цикл
		ОписаниеЭлемента = УИ_РаботаСФормами.НовыйОписаниеРеквизитаЭлемента();
		ОписаниеЭлемента.Имя = "Свойство_" + ИмяСвойства;
		ОписаниеЭлемента.РодительЭлемента = Элементы.ТаблицаКоллекции;
		ОписаниеЭлемента.ПутьКДанным = "ТаблицаКоллекции.Свойство_" + ИмяСвойства;
		ОписаниеЭлемента.СоздаватьЭлемент = Истина;
		УИ_РаботаСФормами.СоздатьЭлементПоОписанию(ЭтотОбъект, ОписаниеЭлемента);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуКоллекии(ЗначениеКоллекции)
	ИндексЭлемента = 0;
	Для Каждого ЭлементКоллекции Из ЗначениеКоллекции Цикл
		НС = ТаблицаКоллекции.Добавить();
		НС.Индекс = ИндексЭлемента;
		УИ_ОбщегоНазначенияКлиентСервер.УстановитьЗначениеВЭлементыФормыКонтейнераУниверсальногоЗначения(ЭтотОбъект,
																										 НС,
																										 ЭлементКоллекции,
																										 Истина);

		ВидыКонтейнеров = ВидыКонтейнераЗначения();
		Если Не ЗначениеЗаполнено(НС.ВидКонтейнера) Тогда
			НС.ВидКонтейнера = ВидыКонтейнеров.ВычислитьПоВходящемуЗначению;
		КонецЕсли;

		Для Каждого ЭлСписка Из ИменаСвойствКоллекции Цикл
			НС["Свойство_" + ЭлСписка.Значение] = Строка(ЭлементКоллекции[ЭлСписка.Значение]);
		КонецЦикла;
		ИндексЭлемента = ИндексЭлемента + 1;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
