
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УИ_ОбщегоНазначения.ФормаИнструментаПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
КонецПроцедуры
#КонецОбласти
#Область ОбработчикиСобытийЭлементовШапкиФормы
&НаКлиенте
Процедура ВыражениеПриИзменении(Элемент)
	ВыражениеПриИзмененииНаСервере();
КонецПроцедуры
#КонецОбласти
#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоЗначения
&НаКлиенте
Процедура ДеревоЗначенияПередРазворачиванием(Элемент, Строка, Отказ)
	
	ЗаполнитьПотомковСтроки(Строка);
	
КонецПроцедуры
#КонецОбласти


#Область ОбработчикиКомандФормы

// Код процедур и функций

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВидыКонтейнераЗначения() 
	Виды = Новый Структура;
	Виды.Вставить("Значение", "Значение");
	Виды.Вставить("ХранилищеЗначения", "ХранилищеЗначения");
	Виды.Вставить("ВременноеХранилище", "ВременноеХранилище");
	Виды.Вставить("СериализованноеЗначение", "СериализованноеЗначение");
	Виды.Вставить("ВычислитьПоРодительскойСтроке", "ВычислитьПоРодительскойСтроке");
	Виды.Вставить("ВычислитьВыражение", "ВычислитьВыражение");
	
	Возврат Виды;	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЗначениеСтрокиДереваЗначения(Форма, СтрокаДерева)
	Если СтрокаДерева = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	ВидыКонтейнераЗначения = ВидыКонтейнераЗначения();

	Если СтрокаДерева.ВидКонтейнера = ВидыКонтейнераЗначения.Значение Тогда
		Возврат СтрокаДерева.Значение;
	ИначеЕсли СтрокаДерева.ВидКонтейнера = ВидыКонтейнераЗначения.ХранилищеЗначения Тогда
#Если Сервер Тогда
		Возврат СтрокаДерева.ЗначениеКонтейнер.Получить();
#КонецЕсли
	ИначеЕсли
	СтрокаДерева.ВидКонтейнера = ВидыКонтейнераЗначения.ВременноеХранилище Тогда
		Возврат ПолучитьИзВременногоХранилища(СтрокаДерева.ЗначениеКонтейнер);
	ИначеЕсли СтрокаДерева.ВидКонтейнера = ВидыКонтейнераЗначения.СериализованноеЗначение Тогда
		Возврат УИ_ОбщегоНазначения.ЗначениеИзСтрокиXML(СтрокаДерева.ЗначениеКонтейнер);
	ИначеЕсли СтрокаДерева.ВидКонтейнера = ВидыКонтейнераЗначения.ВычислитьПоРодительскойСтроке Тогда
		ЗначениеИзСтрокиРодителя = ЗначениеСтрокиДереваЗначения(Форма, СтрокаДерева.ПолучитьРодителя());
		Возврат ЗначениеИзСтрокиРодителя[СтрокаДерева.Имя];
	ИначеЕсли СтрокаДерева.ВидКонтейнера = ВидыКонтейнераЗначения.ВычислитьВыражение Тогда 
		Попытка
			Возврат Вычислить(СтрокаДерева.Имя);
		Исключение
			Возврат Неопределено;
		КонецПопытки;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ЗаполнитьПотомковСтроки(ИдентификаторСтроки)
	СтрокаДерева = ДеревоЗначения.НайтиПоИдентификатору(ИдентификаторСтроки);
	Если СтрокаДерева = Неопределено Тогда
		ВозвраТ;
	КонецЕсли;
	Если СтрокаДерева.ЗаполненыПотомки Тогда
		Возврат;
	КонецЕсли;
	СтрокаДерева.ЗаполненыПотомки = Истина;

	ЗначениеСтрокиДерева = ЗначениеСтрокиДереваЗначения(ЭтотОбъект, СтрокаДерева);

	ЭлементыСтроки = СтрокаДерева.ПолучитьЭлементы();
	ЭлементыСтроки.Очистить();
	//TODO: Вставить содержимое обработчика
	
	ОписаниеТипа = СтрокаДерева.ЗначениеТипЗначения;//см. УИ_ТипыПлатформыКлиентСервер.НовыйОписаниеТипаПлатформы
	Если ОписаниеТипа.ЭтоКоллекция Тогда
		Возврат;
	КонецЕсли;
	
	ИменаСвойств = Новый Массив;//Массив из Строка
	Для Каждого ТекСвойство Из ОписаниеТипа.Свойства Цикл
		Если СтрНайти(ТекСвойство.Имя, "<")>0 Тогда
			Если НРег(ТекСвойство.Имя) = "<имя ключа>" Тогда
//				Для Каждого КлючЗначение Из 
			КонецЕсли;
		Иначе
			ИменаСвойств.Добавить(ТекСвойство.Имя);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ТекИмяСвойства Из ИменаСвойств Цикл
		СтрокаСвойстваДерева = ЭлементыСтроки.Добавить();
		СтрокаСвойстваДерева.Имя = ТекИмяСвойства;
		
		Попытка
			ЗначениеСвойства = ЗначениеСтрокиДерева[ТекИмяСвойства];
		Исключение
			//TODO установить обработку ошибки
			Продолжить;
		КонецПопытки;
		
		ОписаниеТипа = УИ_ТипыПлатформыКлиентСервер.ОписаниеТипаПлатформыПоТипу(ТипЗнч(ЗначениеСвойства));
		СтрокаСвойстваДерева.ЗначениеТипЗначения = ОписаниеТипа;
		СтрокаСвойстваДерева.ЗначениеТипЗначенияПредставление = ОписаниеТипа.Имя;
		
		УстановитьЗначениеВСтрокуДерева(ЭтотОбъект, СтрокаСвойстваДерева, ЗначениеСвойства);
	КонецЦикла;
	
	
КонецПроцедуры

&НаСервере
Процедура ВыражениеПриИзмененииНаСервере()
	ВычислитьВыражение(ЭтотОбъект);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ВычислитьВыражение(Форма)
	ЭлементыДерева = Форма.ДеревоЗначения.ПолучитьЭлементы();
	ЭлементыДерева.Очистить();
	
#Если Не ТонкийКлиент И Не ВебКлиент Тогда
	УстановитьБезопасныйРежим(Истина);
#КонецЕсли
	Попытка
		Значение = Вычислить(Форма.Выражение);
	Исключение
		УИ_ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ОписаниеОшибки());
		Возврат;
	КонецПопытки;
	
	
	ОписаниеТипаЗначения = УИ_ТипыПлатформыКлиентСервер.ОписаниеТипаПлатформыПоТипу(ТипЗнч(Значение));
	Если ОписаниеТипаЗначения = Неопределено Тогда
		УИ_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось получить описание типа значения.");
		Значение = Неопределено;
		Возврат;
	КонецЕсли;
	
	КорневаяСтрока = ЭлементыДерева.Добавить();
	КорневаяСтрока.Имя = Форма.Выражение;
	КорневаяСтрока.ЗначениеТипЗначения = ОписаниеТипаЗначения;
	КорневаяСтрока.ЗначениеТипЗначенияПредставление = ОписаниеТипаЗначения.Имя;

	УстановитьЗначениеВСтрокуДерева(Форма, КорневаяСтрока, Значение, Истина);
	
	Форма.Элементы.ДеревоЗначения.ТекущаяСтрока = КорневаяСтрока.ПолучитьИдентификатор();
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗначениеВСтрокуДерева(Форма, СтрокаДерева, Значение, Очистить = Ложь)
	ВидыКонтейнераЗначения = ВидыКонтейнераЗначения();
	СтрокаДерева.ЗначениеПредставление = Строка(Значение);

	Попытка
		СтрокаДерева.Значение = Значение;
		СтрокаДерева.ВидКонтейнера = ВидыКонтейнераЗначения.Значение;
	Исключение
		СтрокаДерева.Значение = Неопределено;
		Попытка
			#Если Сервер Тогда
			СтрокаДерева.ЗначениеКонтейнер = Новый ХранилищеЗначения(Значение);
			СтрокаДерева.ВидКонтейнера = ВидыКонтейнераЗначения.ХранилищеЗначения;
			#Иначе
				ВызватьИсключение "Нет такого установщика";
			#КонецЕсли
		Исключение
			Попытка
				СтрокаДерева.ЗначениеКонтейнер = ПоместитьВоВременноеХранилище(Значение, Форма.УникальныйИдентификатор);
				СтрокаДерева.ВидКонтейнера = ВидыКонтейнераЗначения.ВременноеХранилище;
			Исключение
				//@skip-check empty-except-statement
				Попытка
					СтрокаДерева.ЗначениеКонтейнер = УИ_ОбщегоНазначения.ЗначениеВСтрокуXML(Значение);
					СтрокаДерева.ВидКонтейнера = ВидыКонтейнераЗначения.СериализованноеЗначение;
				Исключение
					СтрокаРодитель = СтрокаДерева.ПолучитьРодителя();
					Если СтрокаРодитель = Неопределено Тогда
//						СтрокаДерева.ВидКонтейнера = ВидыКонтейнераЗначения.ВычислитьВыражение;

						СтрокаДерева.ЗначениеТипЗначенияПредставление = "Ошибка установки значения";
						СтрокаДерева.ЗначениеПредставление = "Не удалось установить вычисленное значение в реквизит формы.";
						Если Очистить Тогда
							СтрокаДерева.ПолучитьЭлементы().Очистить();
						КонецЕсли;
					Иначе
						СтрокаДерева.ВидКонтейнера = ВидыКонтейнераЗначения.ВычислитьПоРодительскойСтроке;
					КонецЕсли;
				КонецПопытки;
			КонецПопытки;
		КонецПопытки;
//
//		Если ЗначениеВХранилищеУстановлено Тогда
//			СтрокаДерева.ЗначениеКонтейнер = ЗначениеВХранилище;
//		Иначе
//			УИ_ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не удалось установить вычисленное значение в реквизит формы.");
//			СтрокаДерева.ПолучитьЭлементы().Очистить();
//			Возврат;
//		КонецЕсли;

	КонецПопытки;


//	КорневаяСтрока.ЗначениеКонтейнер = УИ_ОбщегоНазначения.ЗначениеВКонтейнерДляФормы(Значение);
	
	СтрокаПУстышка = СтрокаДерева.ПолучитьЭлементы().Добавить();
//	СтрокаПУстышка.Имя = "Пустышка";
	
	
КонецПроцедуры

#КонецОбласти
